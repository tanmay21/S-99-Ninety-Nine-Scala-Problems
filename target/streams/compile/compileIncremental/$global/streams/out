[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\21.scala, C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\20.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\18.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\target\scala-2.12\classes\test_16$.class, C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\target\scala-2.12\classes\test_16.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(test_18)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\16.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(test_18)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\21.scala, C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\20.scala, C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\18.scala, C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\16.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 4 Scala sources to C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.7:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.7:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4b87a13a for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_171\lib\resources.jar;C:\Program Files\Java\jre1.8.0_171\lib\rt.jar;C:\Program Files\Java\jre1.8.0_171\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_171\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_171\lib\jce.jar;C:\Program Files\Java\jre1.8.0_171\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_171\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_171\classes;C:\Users\Magician\.sbt\boot\scala-2.12.6\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Magician\Documents\Github\S-99-Ninety-Nine-Scala-Problems\target\scala-2.12\classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.889838103 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from test_21...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(test_21)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(test_21)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(test_21,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(test_21,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The test_21 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(test_21,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(test_21)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from test_20...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(test_20)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(test_20)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(test_20,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(test_20,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The test_20 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(test_20,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(test_20)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
